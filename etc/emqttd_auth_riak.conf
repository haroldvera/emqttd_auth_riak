{riak_pool, [
  {pool_size, 8},
  {auto_reconnect, 3},

  %% Riakdb Opts
  {host, "localhost"},
  {port, 8087}
]}.

{superqueryriak,  [
  {bucket, "user"},
  {super_field, "groups"},
  {super_value, "SPUTNIK_ADMINISTRATOR"}
]}.

{
    lager,
    [
      {
        handlers,
        [
          {
            lager_console_backend,
            info
          },
          {
            lager_file_backend,
            [
              {
                file,
                "log/error.log"
              },
              {
                level,
                error
              }
            ]
          },
          {
            lager_file_backend,
            [
              {
                file,
                "/var/log/sputnik/console.log"
              },
              {
                level,
                info
              }
            ]
          }
        ]
      },
      {
        error_logger_redirect,
        false
      },
      {
        crash_log,
        "log/crash.log"
      },
      {
        colored,
        true
      },
      {
        colors,
        [
          {debug,     "\e[0;38m" },
          {info,      "\e[0;32m" },
          {notice,    "\e[1;36m" },
          {warning,   "\e[1;33m" },
          {error,     "\e[1;31m" }
        ]
      }
    ]
  }.
%% Authentication Query
{authqueryriak,  [
  {bucket, "user"},
  {password_field, "password"},
  {field, "idx_username"},
  %% Hash Algorithm: plain, md5, sha, sha256, pbkdf2?
  {password_hash, sha256}
]}.




%% Variables: %u = username, %c = clientid, %a = ipaddress

%% Superuser Query
{superquery, "select is_superuser from mqtt_user where username = '%u' limit 1"}.




%% Authentication Query: select password only
{authquery, "select password from mqtt_user where username = '%u' limit 1"}.

%% hash algorithm: plain, md5, sha, sha256, pbkdf2?
{password_hash, plain}.

%% select password with salt
%% {authquery, "select password, salt from mqtt_user where username = '%u'"}.

%% sha256 with salt prefix
%% {password_hash, {salt, sha256}}.

%% sha256 with salt suffix
%% {password_hash, {sha256, salt}}.

%% '%a' = ipaddress, '%u' = username, '%c' = clientid
%% Comment this query, the acl will be disabled
{aclquery, "select allow, ipaddr, username, clientid, access, topic from mqtt_acl where ipaddr = '%a' or username = '%u' or username = '$all' or clientid = '%c'"}.

%% If no ACL rules matched, return...
{acl_nomatch, allow}.

